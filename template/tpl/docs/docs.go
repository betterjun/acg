// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "svinsight API Support",
            "url": "http://www.svinsight.com",
            "email": "svinsight@svinsight.com"
        },
        "license": {
            "name": "private",
            "url": "http://www.svinsight.com/licenses/private.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/pub/servertime": {
            "get": {
                "description": "获取服务器时间",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "获取服务器时间",
                "operationId": "GetServerTime",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/params.ServerTimeRsp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "params.ServerTimeRsp": {
            "type": "object",
            "properties": {
                "server_time": {
                    "description": "服务器试卷",
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:16888",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "智谷星图考试系统 API",
	Description: "pub开头的api不需要登录就可访问，pri开头的需要登录才能访问，访问pri开头的路由时，需要把登录返回的token放到header X-Token中，服务端会做鉴权。返回结果为json格式，包含字段code，data，msg三个字段 , 成功时，code为0，data有数据；失败时，code不为0，msg为错误消息。",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
